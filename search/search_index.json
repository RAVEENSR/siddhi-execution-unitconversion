{
    "docs": [
        {
            "location": "/", 
            "text": "siddhi-execution-unitconversion\n\n\nThe \nsiddhi-execution-unitconversion extension\n is an extension to \nSiddhi\n that enables conversions of length, mass, time and volume units.\n\n\nFind some useful links below:\n\n\n\n\nSource code\n\n\nReleases\n\n\nIssue tracker\n\n\n\n\nLatest API Docs\n\n\nLatest API Docs is \n2.0.0\n.\n\n\nHow to use\n\n\nUsing the extension in \nWSO2 Stream Processor\n\n\n\n\n\n\nYou can use this extension in the latest \nWSO2 Stream Processor\n that is a part of \nWSO2 Analytics\n offering, with editor, debugger and simulation support. \n\n\n\n\n\n\nThis extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component \njar\n that can be found in the \nSTREAM_PROCESSOR_HOME\n/lib\n directory.\n\n\n\n\n\n\nUsing the extension as a \njava library\n\n\n\n\nThis extension can be added as a maven dependency along with other Siddhi dependencies to your project.\n\n\n\n\n     \ndependency\n\n        \ngroupId\norg.wso2.extension.siddhi.execution.unitconversion\n/groupId\n\n        \nartifactId\nsiddhi-execution-unitconversion\n/artifactId\n\n        \nversion\nx.x.x\n/version\n\n     \n/dependency\n\n\n\n\n\n\nJenkins Build Status\n\n\n\n\n\n\n\n\n\n\nBranch\n\n\nBuild Status\n\n\n\n\n\n\n\n\n\n\nmaster\n\n\n\n\n\n\n\n\n\n\n\n\nFeatures\n\n\n\n\nMmTokm\n \n(Function)\nThis converts the input given in megameters into kilometers.\n\n\ncmToft\n \n(Function)\nThis converts the input given in centimeters into feet.\n\n\ncmToin\n \n(Function)\nThis converts the input given in centimeters into inches.\n\n\ncmTokm\n \n(Function)\nThis converts the input value given in centimeters into kilometers.\n\n\ncmTom\n \n(Function)\nThis converts the input given in centimeters into meters.\n\n\ncmTomi\n \n(Function)\nThis converts the input given in centimeters into miles.\n\n\ncmTomm\n \n(Function)\nThis converts the input given in centimeters into millimeters.\n\n\ncmTonm\n \n(Function)\nThis converts the input given in centimeters into nanometers.\n\n\ncmToum\n \n(Function)\nThis converts the input in centimeters into micrometers.\n\n\ncmToyd\n \n(Function)\nThis converts the input given in centimeters into yards.\n\n\ndToh\n \n(Function)\nThis converts the input given in days into hours.\n\n\ngTokg\n \n(Function)\nThis converts the input given in grams into kilograms.\n\n\ngTomg\n \n(Function)\nThis converts the input given in grams into milligrams.\n\n\ngToug\n \n(Function)\nThis converts the input given in grams into micrograms.\n\n\nhTom\n \n(Function)\nThis converts the input given in hours into minutes.\n\n\nhTos\n \n(Function)\nThis converts the input given in hours into seconds.\n\n\nkgToLT\n \n(Function)\nThis converts the input given in kilograms into imperial tons.\n\n\nkgToST\n \n(Function)\nThis converts the input given in kilograms into US tons.\n\n\nkgTog\n \n(Function)\nThis converts the input given in kilograms into grams.\n\n\nkgTolb\n \n(Function)\nThis converts the input given in kilograms into pounds.\n\n\nkgTooz\n \n(Function)\nThis converts the input given in kilograms into ounces.\n\n\nkgTost\n \n(Function)\nThis converts the input given in kilograms into imperial stones.\n\n\nkgTot\n \n(Function)\nThis converts the input given in kilograms into tonnes.\n\n\nkmTocm\n \n(Function)\nThis converts the input given in kilometers into centimeters.\n\n\nkmToft\n \n(Function)\nThis converts the input given in kilometers into feet.\n\n\nkmToin\n \n(Function)\nThis converts the input given in kilometers into inches.\n\n\nkmTom\n \n(Function)\nThis converts the input given in kilometers into meters.\n\n\nkmTomi\n \n(Function)\nThis converts the input given in kilometers into miles.\n\n\nkmTomm\n \n(Function)\nThis converts the input given in kilometers into millimeters.\n\n\nkmTonm\n \n(Function)\nThis converts the input given in kilometers into nanometers.\n\n\nkmToum\n \n(Function)\nThis converts the input given in kilometers into micrometers.\n\n\nkmToyd\n \n(Function)\nThis converts the input given in kilometers into yards.\n\n\nlTom3\n \n(Function)\nThis converts the input given in liters into cubic meters.\n\n\nlToml\n \n(Function)\nThis converts the input given in liters into milliliters.\n\n\nm3Tol\n \n(Function)\nThis converts the input given in cubic meters into liters.\n\n\nmTocm\n \n(Function)\nThis converts the input given in meters into centimeters.\n\n\nmToft\n \n(Function)\nThis converts the input given in meters into feet.\n\n\nmTomm\n \n(Function)\nThis converts the input given in meters into millimeters.\n\n\nmTos\n \n(Function)\nThis converts the input given in minutes into seconds.\n\n\nmToyd\n \n(Function)\nThis converts the input given in meters into yards.\n\n\nmiTokm\n \n(Function)\nThis converts the input given in miles into kilometers.\n\n\nmlTol\n \n(Function)\nThis converts the input given in milliliters into liters.\n\n\nsToms\n \n(Function)\nThis converts the input given in seconds into milliseconds.\n\n\nsTons\n \n(Function)\nThis converts the input given in seconds into nanoseconds.\n\n\nsTous\n \n(Function)\nThis converts the input given in seconds into microseconds.\n\n\ntTog\n \n(Function)\nThis converts the input given in tonnes into grams.\n\n\ntTokg\n \n(Function)\nThis converts the input given in tonnes into kilograms.\n\n\nyTod\n \n(Function)\nThis converts the given input in years into days.\n\n\n\n\nHow to Contribute\n\n\n\n\n\n\nPlease report issues at \nGitHub Issue Tracker\n.\n\n\n\n\n\n\nSend your contributions as pull requests to \nmaster branch\n. \n\n\n\n\n\n\nContact us\n\n\n\n\n\n\nPost your questions with the \n\"Siddhi\"\n tag in \nStackoverflow\n. \n\n\n\n\n\n\nSiddhi developers can be contacted via the mailing lists:\n\n\nDevelopers List   : \ndev@wso2.org\n\n\nArchitecture List : \narchitecture@wso2.org\n\n\n\n\n\n\nSupport\n\n\n\n\n\n\nWe are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. \n\n\n\n\n\n\nFor more details and to take advantage of this unique opportunity contact us via \nhttp://wso2.com/support/\n.", 
            "title": "Welcome"
        }, 
        {
            "location": "/#siddhi-execution-unitconversion", 
            "text": "The  siddhi-execution-unitconversion extension  is an extension to  Siddhi  that enables conversions of length, mass, time and volume units.  Find some useful links below:   Source code  Releases  Issue tracker", 
            "title": "siddhi-execution-unitconversion"
        }, 
        {
            "location": "/#latest-api-docs", 
            "text": "Latest API Docs is  2.0.0 .", 
            "title": "Latest API Docs"
        }, 
        {
            "location": "/#how-to-use", 
            "text": "Using the extension in  WSO2 Stream Processor    You can use this extension in the latest  WSO2 Stream Processor  that is a part of  WSO2 Analytics  offering, with editor, debugger and simulation support.     This extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component  jar  that can be found in the  STREAM_PROCESSOR_HOME /lib  directory.    Using the extension as a  java library   This extension can be added as a maven dependency along with other Siddhi dependencies to your project.         dependency \n         groupId org.wso2.extension.siddhi.execution.unitconversion /groupId \n         artifactId siddhi-execution-unitconversion /artifactId \n         version x.x.x /version \n      /dependency", 
            "title": "How to use"
        }, 
        {
            "location": "/#jenkins-build-status", 
            "text": "Branch  Build Status      master", 
            "title": "Jenkins Build Status"
        }, 
        {
            "location": "/#features", 
            "text": "MmTokm   (Function) This converts the input given in megameters into kilometers.  cmToft   (Function) This converts the input given in centimeters into feet.  cmToin   (Function) This converts the input given in centimeters into inches.  cmTokm   (Function) This converts the input value given in centimeters into kilometers.  cmTom   (Function) This converts the input given in centimeters into meters.  cmTomi   (Function) This converts the input given in centimeters into miles.  cmTomm   (Function) This converts the input given in centimeters into millimeters.  cmTonm   (Function) This converts the input given in centimeters into nanometers.  cmToum   (Function) This converts the input in centimeters into micrometers.  cmToyd   (Function) This converts the input given in centimeters into yards.  dToh   (Function) This converts the input given in days into hours.  gTokg   (Function) This converts the input given in grams into kilograms.  gTomg   (Function) This converts the input given in grams into milligrams.  gToug   (Function) This converts the input given in grams into micrograms.  hTom   (Function) This converts the input given in hours into minutes.  hTos   (Function) This converts the input given in hours into seconds.  kgToLT   (Function) This converts the input given in kilograms into imperial tons.  kgToST   (Function) This converts the input given in kilograms into US tons.  kgTog   (Function) This converts the input given in kilograms into grams.  kgTolb   (Function) This converts the input given in kilograms into pounds.  kgTooz   (Function) This converts the input given in kilograms into ounces.  kgTost   (Function) This converts the input given in kilograms into imperial stones.  kgTot   (Function) This converts the input given in kilograms into tonnes.  kmTocm   (Function) This converts the input given in kilometers into centimeters.  kmToft   (Function) This converts the input given in kilometers into feet.  kmToin   (Function) This converts the input given in kilometers into inches.  kmTom   (Function) This converts the input given in kilometers into meters.  kmTomi   (Function) This converts the input given in kilometers into miles.  kmTomm   (Function) This converts the input given in kilometers into millimeters.  kmTonm   (Function) This converts the input given in kilometers into nanometers.  kmToum   (Function) This converts the input given in kilometers into micrometers.  kmToyd   (Function) This converts the input given in kilometers into yards.  lTom3   (Function) This converts the input given in liters into cubic meters.  lToml   (Function) This converts the input given in liters into milliliters.  m3Tol   (Function) This converts the input given in cubic meters into liters.  mTocm   (Function) This converts the input given in meters into centimeters.  mToft   (Function) This converts the input given in meters into feet.  mTomm   (Function) This converts the input given in meters into millimeters.  mTos   (Function) This converts the input given in minutes into seconds.  mToyd   (Function) This converts the input given in meters into yards.  miTokm   (Function) This converts the input given in miles into kilometers.  mlTol   (Function) This converts the input given in milliliters into liters.  sToms   (Function) This converts the input given in seconds into milliseconds.  sTons   (Function) This converts the input given in seconds into nanoseconds.  sTous   (Function) This converts the input given in seconds into microseconds.  tTog   (Function) This converts the input given in tonnes into grams.  tTokg   (Function) This converts the input given in tonnes into kilograms.  yTod   (Function) This converts the given input in years into days.", 
            "title": "Features"
        }, 
        {
            "location": "/#how-to-contribute", 
            "text": "Please report issues at  GitHub Issue Tracker .    Send your contributions as pull requests to  master branch .", 
            "title": "How to Contribute"
        }, 
        {
            "location": "/#contact-us", 
            "text": "Post your questions with the  \"Siddhi\"  tag in  Stackoverflow .     Siddhi developers can be contacted via the mailing lists:  Developers List   :  dev@wso2.org  Architecture List :  architecture@wso2.org", 
            "title": "Contact us"
        }, 
        {
            "location": "/#support", 
            "text": "We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology.     For more details and to take advantage of this unique opportunity contact us via  http://wso2.com/support/ .", 
            "title": "Support"
        }, 
        {
            "location": "/api/2.0.0/", 
            "text": "API Docs - v2.0.0\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nThis converts the input given in megameters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from megameters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToft \n(Function)\n\n\nThis converts the input given in centimeters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToin \n(Function)\n\n\nThis converts the input given in centimeters into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTokm \n(Function)\n\n\nThis converts the input value given in centimeters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTom \n(Function)\n\n\nThis converts the input given in centimeters into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomi \n(Function)\n\n\nThis converts the input given in centimeters into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomm \n(Function)\n\n\nThis converts the input given in centimeters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTonm \n(Function)\n\n\nThis converts the input given in centimeters into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToum \n(Function)\n\n\nThis converts the input in centimeters into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToyd \n(Function)\n\n\nThis converts the input given in centimeters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\ndToh \n(Function)\n\n\nThis converts the input given in days into hours.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from days into hours.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.\n\n\n\ngTokg \n(Function)\n\n\nThis converts the input given in grams into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into kilograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\ngTomg \n(Function)\n\n\nThis converts the input given in grams into milligrams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into milligrams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.\n\n\n\ngToug \n(Function)\n\n\nThis converts the input given in grams into micrograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into micrograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.\n\n\n\nhTom \n(Function)\n\n\nThis converts the input given in hours into minutes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into minutes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.\n\n\n\nhTos \n(Function)\n\n\nThis converts the input given in hours into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToLT \n(Function)\n\n\nThis converts the input given in kilograms into imperial tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToST \n(Function)\n\n\nThis converts the input given in kilograms into US tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into US tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTog \n(Function)\n\n\nThis converts the input given in kilograms into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into grams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTolb \n(Function)\n\n\nThis converts the input given in kilograms into pounds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into pounds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTooz \n(Function)\n\n\nThis converts the input given in kilograms into ounces.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into ounces.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTost \n(Function)\n\n\nThis converts the input given in kilograms into imperial stones.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial stones.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTot \n(Function)\n\n\nThis converts the input given in kilograms into tonnes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into tonnes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTocm \n(Function)\n\n\nThis converts the input given in kilometers into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.\n\n\n\nkmToft \n(Function)\n\n\nThis converts the input given in kilometers into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToin \n(Function)\n\n\nThis converts the input given in kilometers into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTom \n(Function)\n\n\nThis converts the input given in kilometers into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomi \n(Function)\n\n\nThis converts the input given in kilometers into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomm \n(Function)\n\n\nThis converts the input given in kilometers into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTonm \n(Function)\n\n\nThis converts the input given in kilometers into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToum \n(Function)\n\n\nThis converts the input given in kilometers into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.\n\n\n\nkmToyd \n(Function)\n\n\nThis converts the input given in kilometers into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nlTom3 \n(Function)\n\n\nThis converts the input given in liters into cubic meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into cubic meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.\n\n\n\nlToml \n(Function)\n\n\nThis converts the input given in liters into milliliters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into milliliters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.\n\n\n\nm3Tol \n(Function)\n\n\nThis converts the input given in cubic meters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTocm \n(Function)\n\n\nThis converts the input given in meters into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmToft \n(Function)\n\n\nThis converts the input given in meters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nmTomm \n(Function)\n\n\nThis converts the input given in meters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTos \n(Function)\n\n\nThis converts the input given in minutes into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from minutes into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nmToyd \n(Function)\n\n\nThis converts the input given in meters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nmiTokm \n(Function)\n\n\nThis converts the input given in miles into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from miles into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\nmlTol \n(Function)\n\n\nThis converts the input given in milliliters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from milliliters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nsToms \n(Function)\n\n\nThis converts the input given in seconds into milliseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into milliseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTons \n(Function)\n\n\nThis converts the input given in seconds into nanoseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into nanoseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTous \n(Function)\n\n\nThis converts the input given in seconds into microseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into microseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.\n\n\n\ntTog \n(Function)\n\n\nThis converts the input given in tonnes into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from Tonnes into grams.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\ntTokg \n(Function)\n\n\nThis converts the input given in tonnes into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from tonnes into kilograms.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\nyTod \n(Function)\n\n\nThis converts the given input in years into days.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from years into days.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "2.0.0"
        }, 
        {
            "location": "/api/2.0.0/#api-docs-v200", 
            "text": "", 
            "title": "API Docs - v2.0.0"
        }, 
        {
            "location": "/api/2.0.0/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/2.0.0/#mmtokm-function", 
            "text": "This converts the input given in megameters into kilometers.  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from megameters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#cmtoft-function", 
            "text": "This converts the input given in centimeters into feet.  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/2.0.0/#cmtoin-function", 
            "text": "This converts the input given in centimeters into inches.  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/2.0.0/#cmtokm-function", 
            "text": "This converts the input value given in centimeters into kilometers.  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#cmtom-function", 
            "text": "This converts the input given in centimeters into meters.  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/2.0.0/#cmtomi-function", 
            "text": "This converts the input given in centimeters into miles.  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/2.0.0/#cmtomm-function", 
            "text": "This converts the input given in centimeters into millimeters.  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#cmtonm-function", 
            "text": "This converts the input given in centimeters into nanometers.  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#cmtoum-function", 
            "text": "This converts the input in centimeters into micrometers.  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/2.0.0/#cmtoyd-function", 
            "text": "This converts the input given in centimeters into yards.  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/2.0.0/#dtoh-function", 
            "text": "This converts the input given in days into hours.  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from days into hours. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/2.0.0/#gtokg-function", 
            "text": "This converts the input given in grams into kilograms.  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into kilograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/2.0.0/#gtomg-function", 
            "text": "This converts the input given in grams into milligrams.  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into milligrams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/2.0.0/#gtoug-function", 
            "text": "This converts the input given in grams into micrograms.  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into micrograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/2.0.0/#htom-function", 
            "text": "This converts the input given in hours into minutes.  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into minutes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/2.0.0/#htos-function", 
            "text": "This converts the input given in hours into seconds.  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kgtolt-function", 
            "text": "This converts the input given in kilograms into imperial tons.  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kgtost-function", 
            "text": "This converts the input given in kilograms into US tons.  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into US tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kgtog-function", 
            "text": "This converts the input given in kilograms into grams.  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into grams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kgtolb-function", 
            "text": "This converts the input given in kilograms into pounds.  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into pounds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kgtooz-function", 
            "text": "This converts the input given in kilograms into ounces.  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into ounces. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kgtost-function_1", 
            "text": "This converts the input given in kilograms into imperial stones.  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial stones. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kgtot-function", 
            "text": "This converts the input given in kilograms into tonnes.  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into tonnes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kmtocm-function", 
            "text": "This converts the input given in kilometers into centimeters.  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kmtoft-function", 
            "text": "This converts the input given in kilometers into feet.  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kmtoin-function", 
            "text": "This converts the input given in kilometers into inches.  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kmtom-function", 
            "text": "This converts the input given in kilometers into meters.  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kmtomi-function", 
            "text": "This converts the input given in kilometers into miles.  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kmtomm-function", 
            "text": "This converts the input given in kilometers into millimeters.  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kmtonm-function", 
            "text": "This converts the input given in kilometers into nanometers.  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kmtoum-function", 
            "text": "This converts the input given in kilometers into micrometers.  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/2.0.0/#kmtoyd-function", 
            "text": "This converts the input given in kilometers into yards.  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/2.0.0/#ltom3-function", 
            "text": "This converts the input given in liters into cubic meters.  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into cubic meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/2.0.0/#ltoml-function", 
            "text": "This converts the input given in liters into milliliters.  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into milliliters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/2.0.0/#m3tol-function", 
            "text": "This converts the input given in cubic meters into liters.  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/2.0.0/#mtocm-function", 
            "text": "This converts the input given in meters into centimeters.  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#mtoft-function", 
            "text": "This converts the input given in meters into feet.  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/2.0.0/#mtomm-function", 
            "text": "This converts the input given in meters into millimeters.  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#mtos-function", 
            "text": "This converts the input given in minutes into seconds.  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from minutes into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/2.0.0/#mtoyd-function", 
            "text": "This converts the input given in meters into yards.  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/2.0.0/#mitokm-function", 
            "text": "This converts the input given in miles into kilometers.  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from miles into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/2.0.0/#mltol-function", 
            "text": "This converts the input given in milliliters into liters.  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from milliliters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/2.0.0/#stoms-function", 
            "text": "This converts the input given in seconds into milliseconds.  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into milliseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/2.0.0/#stons-function", 
            "text": "This converts the input given in seconds into nanoseconds.  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into nanoseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/2.0.0/#stous-function", 
            "text": "This converts the input given in seconds into microseconds.  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into microseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/2.0.0/#ttog-function", 
            "text": "This converts the input given in tonnes into grams.  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from Tonnes into grams. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/2.0.0/#ttokg-function", 
            "text": "This converts the input given in tonnes into kilograms.  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from tonnes into kilograms. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/2.0.0/#ytod-function", 
            "text": "This converts the given input in years into days.  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from years into days. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.1.1/", 
            "text": "API Docs - v1.1.1\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nThis converts the input given in megameters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from megameters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToft \n(Function)\n\n\nThis converts the input given in centimeters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToin \n(Function)\n\n\nThis converts the input given in centimeters into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTokm \n(Function)\n\n\nThis converts the input value given in centimeters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTom \n(Function)\n\n\nThis converts the input given in centimeters into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomi \n(Function)\n\n\nThis converts the input given in centimeters into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomm \n(Function)\n\n\nThis converts the input given in centimeters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTonm \n(Function)\n\n\nThis converts the input given in centimeters into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToum \n(Function)\n\n\nThis converts the input in centimeters into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToyd \n(Function)\n\n\nThis converts the input given in centimeters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\ndToh \n(Function)\n\n\nThis converts the input given in days into hours.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from days into hours.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.\n\n\n\ngTokg \n(Function)\n\n\nThis converts the input given in grams into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into kilograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\ngTomg \n(Function)\n\n\nThis converts the input given in grams into milligrams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into milligrams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.\n\n\n\ngToug \n(Function)\n\n\nThis converts the input given in grams into micrograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into micrograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.\n\n\n\nhTom \n(Function)\n\n\nThis converts the input given in hours into minutes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into minutes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.\n\n\n\nhTos \n(Function)\n\n\nThis converts the input given in hours into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToLT \n(Function)\n\n\nThis converts the input given in kilograms into imperial tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToST \n(Function)\n\n\nThis converts the input given in kilograms into US tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into US tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTog \n(Function)\n\n\nThis converts the input given in kilograms into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into grams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTolb \n(Function)\n\n\nThis converts the input given in kilograms into pounds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into pounds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTooz \n(Function)\n\n\nThis converts the input given in kilograms into ounces.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into ounces.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTost \n(Function)\n\n\nThis converts the input given in kilograms into imperial stones.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial stones.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTot \n(Function)\n\n\nThis converts the input given in kilograms into tonnes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into tonnes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTocm \n(Function)\n\n\nThis converts the input given in kilometers into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.\n\n\n\nkmToft \n(Function)\n\n\nThis converts the input given in kilometers into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToin \n(Function)\n\n\nThis converts the input given in kilometers into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTom \n(Function)\n\n\nThis converts the input given in kilometers into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomi \n(Function)\n\n\nThis converts the input given in kilometers into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomm \n(Function)\n\n\nThis converts the input given in kilometers into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTonm \n(Function)\n\n\nThis converts the input given in kilometers into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToum \n(Function)\n\n\nThis converts the input given in kilometers into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.\n\n\n\nkmToyd \n(Function)\n\n\nThis converts the input given in kilometers into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nlTom3 \n(Function)\n\n\nThis converts the input given in liters into cubic meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into cubic meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.\n\n\n\nlToml \n(Function)\n\n\nThis converts the input given in liters into milliliters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into milliliters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.\n\n\n\nm3Tol \n(Function)\n\n\nThis converts the input given in cubic meters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTocm \n(Function)\n\n\nThis converts the input given in meters into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmToft \n(Function)\n\n\nThis converts the input given in meters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nmTomm \n(Function)\n\n\nThis converts the input given in meters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTos \n(Function)\n\n\nThis converts the input given in minutes into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from minutes into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nmToyd \n(Function)\n\n\nThis converts the input given in meters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nmiTokm \n(Function)\n\n\nThis converts the input given in miles into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from miles into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\nmlTol \n(Function)\n\n\nThis converts the input given in milliliters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from milliliters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nsToms \n(Function)\n\n\nThis converts the input given in seconds into milliseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into milliseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTons \n(Function)\n\n\nThis converts the input given in seconds into nanoseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into nanoseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTous \n(Function)\n\n\nThis converts the input given in seconds into microseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into microseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.\n\n\n\ntTog \n(Function)\n\n\nThis converts the input given in tonnes into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from Tonnes into grams.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\ntTokg \n(Function)\n\n\nThis converts the input given in tonnes into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from tonnes into kilograms.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\nyTod \n(Function)\n\n\nThis converts the given input in years into days.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from years into days.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "1.1.1"
        }, 
        {
            "location": "/api/1.1.1/#api-docs-v111", 
            "text": "", 
            "title": "API Docs - v1.1.1"
        }, 
        {
            "location": "/api/1.1.1/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.1.1/#mmtokm-function", 
            "text": "This converts the input given in megameters into kilometers.  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from megameters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#cmtoft-function", 
            "text": "This converts the input given in centimeters into feet.  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.1.1/#cmtoin-function", 
            "text": "This converts the input given in centimeters into inches.  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.1.1/#cmtokm-function", 
            "text": "This converts the input value given in centimeters into kilometers.  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#cmtom-function", 
            "text": "This converts the input given in centimeters into meters.  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.1.1/#cmtomi-function", 
            "text": "This converts the input given in centimeters into miles.  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.1.1/#cmtomm-function", 
            "text": "This converts the input given in centimeters into millimeters.  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#cmtonm-function", 
            "text": "This converts the input given in centimeters into nanometers.  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#cmtoum-function", 
            "text": "This converts the input in centimeters into micrometers.  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.1.1/#cmtoyd-function", 
            "text": "This converts the input given in centimeters into yards.  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.1.1/#dtoh-function", 
            "text": "This converts the input given in days into hours.  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from days into hours. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.1.1/#gtokg-function", 
            "text": "This converts the input given in grams into kilograms.  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into kilograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.1.1/#gtomg-function", 
            "text": "This converts the input given in grams into milligrams.  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into milligrams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.1.1/#gtoug-function", 
            "text": "This converts the input given in grams into micrograms.  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into micrograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.1.1/#htom-function", 
            "text": "This converts the input given in hours into minutes.  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into minutes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.1.1/#htos-function", 
            "text": "This converts the input given in hours into seconds.  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kgtolt-function", 
            "text": "This converts the input given in kilograms into imperial tons.  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kgtost-function", 
            "text": "This converts the input given in kilograms into US tons.  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into US tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kgtog-function", 
            "text": "This converts the input given in kilograms into grams.  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into grams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kgtolb-function", 
            "text": "This converts the input given in kilograms into pounds.  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into pounds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kgtooz-function", 
            "text": "This converts the input given in kilograms into ounces.  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into ounces. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kgtost-function_1", 
            "text": "This converts the input given in kilograms into imperial stones.  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial stones. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kgtot-function", 
            "text": "This converts the input given in kilograms into tonnes.  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into tonnes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kmtocm-function", 
            "text": "This converts the input given in kilometers into centimeters.  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kmtoft-function", 
            "text": "This converts the input given in kilometers into feet.  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kmtoin-function", 
            "text": "This converts the input given in kilometers into inches.  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kmtom-function", 
            "text": "This converts the input given in kilometers into meters.  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kmtomi-function", 
            "text": "This converts the input given in kilometers into miles.  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kmtomm-function", 
            "text": "This converts the input given in kilometers into millimeters.  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kmtonm-function", 
            "text": "This converts the input given in kilometers into nanometers.  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kmtoum-function", 
            "text": "This converts the input given in kilometers into micrometers.  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.1.1/#kmtoyd-function", 
            "text": "This converts the input given in kilometers into yards.  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.1.1/#ltom3-function", 
            "text": "This converts the input given in liters into cubic meters.  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into cubic meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.1.1/#ltoml-function", 
            "text": "This converts the input given in liters into milliliters.  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into milliliters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.1.1/#m3tol-function", 
            "text": "This converts the input given in cubic meters into liters.  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.1.1/#mtocm-function", 
            "text": "This converts the input given in meters into centimeters.  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#mtoft-function", 
            "text": "This converts the input given in meters into feet.  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.1.1/#mtomm-function", 
            "text": "This converts the input given in meters into millimeters.  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#mtos-function", 
            "text": "This converts the input given in minutes into seconds.  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from minutes into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.1.1/#mtoyd-function", 
            "text": "This converts the input given in meters into yards.  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.1.1/#mitokm-function", 
            "text": "This converts the input given in miles into kilometers.  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from miles into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.1.1/#mltol-function", 
            "text": "This converts the input given in milliliters into liters.  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from milliliters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.1.1/#stoms-function", 
            "text": "This converts the input given in seconds into milliseconds.  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into milliseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.1.1/#stons-function", 
            "text": "This converts the input given in seconds into nanoseconds.  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into nanoseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.1.1/#stous-function", 
            "text": "This converts the input given in seconds into microseconds.  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into microseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.1.1/#ttog-function", 
            "text": "This converts the input given in tonnes into grams.  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from Tonnes into grams. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.1.1/#ttokg-function", 
            "text": "This converts the input given in tonnes into kilograms.  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from tonnes into kilograms. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.1.1/#ytod-function", 
            "text": "This converts the given input in years into days.  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from years into days. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.1.0/", 
            "text": "API Docs - v1.1.0\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nThis converts the input given in megameters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from megameters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToft \n(Function)\n\n\nThis converts the input given in centimeters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToin \n(Function)\n\n\nThis converts the input given in centimeters into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTokm \n(Function)\n\n\nThis converts the input value given in centimeters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTom \n(Function)\n\n\nThis converts the input given in centimeters into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomi \n(Function)\n\n\nThis converts the input given in centimeters into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomm \n(Function)\n\n\nThis converts the input given in centimeters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTonm \n(Function)\n\n\nThis converts the input given in centimeters into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToum \n(Function)\n\n\nThis converts the input in centimeters into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToyd \n(Function)\n\n\nThis converts the input given in centimeters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\ndToh \n(Function)\n\n\nThis converts the input given in days into hours.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from days into hours.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.\n\n\n\ngTokg \n(Function)\n\n\nThis converts the input given in grams into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into kilograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\ngTomg \n(Function)\n\n\nThis converts the input given in grams into milligrams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into milligrams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.\n\n\n\ngToug \n(Function)\n\n\nThis converts the input given in grams into micrograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into micrograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.\n\n\n\nhTom \n(Function)\n\n\nThis converts the input given in hours into minutes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into minutes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.\n\n\n\nhTos \n(Function)\n\n\nThis converts the input given in hours into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToLT \n(Function)\n\n\nThis converts the input given in kilograms into imperial tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToST \n(Function)\n\n\nThis converts the input given in kilograms into US tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into US tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTog \n(Function)\n\n\nThis converts the input given in kilograms into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into grams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTolb \n(Function)\n\n\nThis converts the input given in kilograms into pounds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into pounds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTooz \n(Function)\n\n\nThis converts the input given in kilograms into ounces.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into ounces.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTost \n(Function)\n\n\nThis converts the input given in kilograms into imperial stones.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial stones.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTot \n(Function)\n\n\nThis converts the input given in kilograms into tonnes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into tonnes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTocm \n(Function)\n\n\nThis converts the input given in kilometers into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.\n\n\n\nkmToft \n(Function)\n\n\nThis converts the input given in kilometers into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToin \n(Function)\n\n\nThis converts the input given in kilometers into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTom \n(Function)\n\n\nThis converts the input given in kilometers into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomi \n(Function)\n\n\nThis converts the input given in kilometers into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomm \n(Function)\n\n\nThis converts the input given in kilometers into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTonm \n(Function)\n\n\nThis converts the input given in kilometers into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToum \n(Function)\n\n\nThis converts the input given in kilometers into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.\n\n\n\nkmToyd \n(Function)\n\n\nThis converts the input given in kilometers into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nlTom3 \n(Function)\n\n\nThis converts the input given in liters into cubic meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into cubic meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.\n\n\n\nlToml \n(Function)\n\n\nThis converts the input given in liters into milliliters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into milliliters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.\n\n\n\nm3Tol \n(Function)\n\n\nThis converts the input given in cubic meters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTocm \n(Function)\n\n\nThis converts the input given in meters into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmToft \n(Function)\n\n\nThis converts the input given in meters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nmTomm \n(Function)\n\n\nThis converts the input given in meters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTos \n(Function)\n\n\nThis converts the input given in minutes into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from minutes into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nmToyd \n(Function)\n\n\nThis converts the input given in meters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nmiTokm \n(Function)\n\n\nThis converts the input given in miles into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from miles into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\nmlTol \n(Function)\n\n\nThis converts the input given in milliliters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from milliliters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nsToms \n(Function)\n\n\nThis converts the input given in seconds into milliseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into milliseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTons \n(Function)\n\n\nThis converts the input given in seconds into nanoseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into nanoseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTous \n(Function)\n\n\nThis converts the input given in seconds into microseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into microseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.\n\n\n\ntTog \n(Function)\n\n\nThis converts the input given in tonnes into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from Tonnes into grams.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\ntTokg \n(Function)\n\n\nThis converts the input given in tonnes into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from tonnes into kilograms.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\nyTod \n(Function)\n\n\nThis converts the given input in years into days.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from years into days.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "1.1.0"
        }, 
        {
            "location": "/api/1.1.0/#api-docs-v110", 
            "text": "", 
            "title": "API Docs - v1.1.0"
        }, 
        {
            "location": "/api/1.1.0/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.1.0/#mmtokm-function", 
            "text": "This converts the input given in megameters into kilometers.  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from megameters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#cmtoft-function", 
            "text": "This converts the input given in centimeters into feet.  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.1.0/#cmtoin-function", 
            "text": "This converts the input given in centimeters into inches.  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.1.0/#cmtokm-function", 
            "text": "This converts the input value given in centimeters into kilometers.  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#cmtom-function", 
            "text": "This converts the input given in centimeters into meters.  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.1.0/#cmtomi-function", 
            "text": "This converts the input given in centimeters into miles.  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.1.0/#cmtomm-function", 
            "text": "This converts the input given in centimeters into millimeters.  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#cmtonm-function", 
            "text": "This converts the input given in centimeters into nanometers.  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#cmtoum-function", 
            "text": "This converts the input in centimeters into micrometers.  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.1.0/#cmtoyd-function", 
            "text": "This converts the input given in centimeters into yards.  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.1.0/#dtoh-function", 
            "text": "This converts the input given in days into hours.  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from days into hours. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.1.0/#gtokg-function", 
            "text": "This converts the input given in grams into kilograms.  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into kilograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.1.0/#gtomg-function", 
            "text": "This converts the input given in grams into milligrams.  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into milligrams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.1.0/#gtoug-function", 
            "text": "This converts the input given in grams into micrograms.  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into micrograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.1.0/#htom-function", 
            "text": "This converts the input given in hours into minutes.  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into minutes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.1.0/#htos-function", 
            "text": "This converts the input given in hours into seconds.  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kgtolt-function", 
            "text": "This converts the input given in kilograms into imperial tons.  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kgtost-function", 
            "text": "This converts the input given in kilograms into US tons.  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into US tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kgtog-function", 
            "text": "This converts the input given in kilograms into grams.  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into grams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kgtolb-function", 
            "text": "This converts the input given in kilograms into pounds.  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into pounds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kgtooz-function", 
            "text": "This converts the input given in kilograms into ounces.  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into ounces. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kgtost-function_1", 
            "text": "This converts the input given in kilograms into imperial stones.  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial stones. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kgtot-function", 
            "text": "This converts the input given in kilograms into tonnes.  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into tonnes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kmtocm-function", 
            "text": "This converts the input given in kilometers into centimeters.  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kmtoft-function", 
            "text": "This converts the input given in kilometers into feet.  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kmtoin-function", 
            "text": "This converts the input given in kilometers into inches.  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kmtom-function", 
            "text": "This converts the input given in kilometers into meters.  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kmtomi-function", 
            "text": "This converts the input given in kilometers into miles.  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kmtomm-function", 
            "text": "This converts the input given in kilometers into millimeters.  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kmtonm-function", 
            "text": "This converts the input given in kilometers into nanometers.  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kmtoum-function", 
            "text": "This converts the input given in kilometers into micrometers.  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.1.0/#kmtoyd-function", 
            "text": "This converts the input given in kilometers into yards.  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.1.0/#ltom3-function", 
            "text": "This converts the input given in liters into cubic meters.  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into cubic meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.1.0/#ltoml-function", 
            "text": "This converts the input given in liters into milliliters.  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into milliliters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.1.0/#m3tol-function", 
            "text": "This converts the input given in cubic meters into liters.  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.1.0/#mtocm-function", 
            "text": "This converts the input given in meters into centimeters.  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#mtoft-function", 
            "text": "This converts the input given in meters into feet.  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.1.0/#mtomm-function", 
            "text": "This converts the input given in meters into millimeters.  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#mtos-function", 
            "text": "This converts the input given in minutes into seconds.  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from minutes into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.1.0/#mtoyd-function", 
            "text": "This converts the input given in meters into yards.  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.1.0/#mitokm-function", 
            "text": "This converts the input given in miles into kilometers.  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from miles into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.1.0/#mltol-function", 
            "text": "This converts the input given in milliliters into liters.  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from milliliters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.1.0/#stoms-function", 
            "text": "This converts the input given in seconds into milliseconds.  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into milliseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.1.0/#stons-function", 
            "text": "This converts the input given in seconds into nanoseconds.  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into nanoseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.1.0/#stous-function", 
            "text": "This converts the input given in seconds into microseconds.  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into microseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.1.0/#ttog-function", 
            "text": "This converts the input given in tonnes into grams.  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from Tonnes into grams. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.1.0/#ttokg-function", 
            "text": "This converts the input given in tonnes into kilograms.  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from tonnes into kilograms. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.1.0/#ytod-function", 
            "text": "This converts the given input in years into days.  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from years into days. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.17/", 
            "text": "API Docs - v1.0.17\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nThis converts the input given in megameters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from megameters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToft \n(Function)\n\n\nThis converts the input given in centimeters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToin \n(Function)\n\n\nThis converts the input given in centimeters into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTokm \n(Function)\n\n\nThis converts the input value given in centimeters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTom \n(Function)\n\n\nThis converts the input given in centimeters into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomi \n(Function)\n\n\nThis converts the input given in centimeters into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomm \n(Function)\n\n\nThis converts the input given in centimeters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTonm \n(Function)\n\n\nThis converts the input given in centimeters into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToum \n(Function)\n\n\nThis converts the input in centimeters into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToyd \n(Function)\n\n\nThis converts the input given in centimeters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\ndToh \n(Function)\n\n\nThis converts the input given in days into hours.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from days into hours.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.\n\n\n\ngTokg \n(Function)\n\n\nThis converts the input given in grams into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into kilograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\ngTomg \n(Function)\n\n\nThis converts the input given in grams into milligrams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into milligrams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.\n\n\n\ngToug \n(Function)\n\n\nThis converts the input given in grams into micrograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into micrograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.\n\n\n\nhTom \n(Function)\n\n\nThis converts the input given in hours into minutes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into minutes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.\n\n\n\nhTos \n(Function)\n\n\nThis converts the input given in hours into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToLT \n(Function)\n\n\nThis converts the input given in kilograms into imperial tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToST \n(Function)\n\n\nThis converts the input given in kilograms into US tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into US tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTog \n(Function)\n\n\nThis converts the input given in kilograms into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into grams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTolb \n(Function)\n\n\nThis converts the input given in kilograms into pounds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into pounds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTooz \n(Function)\n\n\nThis converts the input given in kilograms into ounces.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into ounces.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTost \n(Function)\n\n\nThis converts the input given in kilograms into imperial stones.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial stones.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTot \n(Function)\n\n\nThis converts the input given in kilograms into tonnes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into tonnes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTocm \n(Function)\n\n\nThis converts the input given in kilometers into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.\n\n\n\nkmToft \n(Function)\n\n\nThis converts the input given in kilometers into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToin \n(Function)\n\n\nThis converts the input given in kilometers into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTom \n(Function)\n\n\nThis converts the input given in kilometers into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomi \n(Function)\n\n\nThis converts the input given in kilometers into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomm \n(Function)\n\n\nThis converts the input given in kilometers into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTonm \n(Function)\n\n\nThis converts the input given in kilometers into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToum \n(Function)\n\n\nThis converts the input given in kilometers into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.\n\n\n\nkmToyd \n(Function)\n\n\nThis converts the input given in kilometers into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nlTom3 \n(Function)\n\n\nThis converts the input given in liters into cubic meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into cubic meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.\n\n\n\nlToml \n(Function)\n\n\nThis converts the input given in liters into milliliters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into milliliters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.\n\n\n\nm3Tol \n(Function)\n\n\nThis converts the input given in cubic meters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTocm \n(Function)\n\n\nThis converts the input given in meters into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmToft \n(Function)\n\n\nThis converts the input given in meters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nmTomm \n(Function)\n\n\nThis converts the input given in meters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTos \n(Function)\n\n\nThis converts the input given in minutes into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from minutes into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nmToyd \n(Function)\n\n\nThis converts the input given in meters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nmiTokm \n(Function)\n\n\nThis converts the input given in miles into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from miles into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\nmlTol \n(Function)\n\n\nThis converts the input given in milliliters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from milliliters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nsToms \n(Function)\n\n\nThis converts the input given in seconds into milliseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into milliseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTons \n(Function)\n\n\nThis converts the input given in seconds into nanoseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into nanoseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTous \n(Function)\n\n\nThis converts the input given in seconds into microseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into microseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.\n\n\n\ntTog \n(Function)\n\n\nThis converts the input given in tonnes into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from Tonnes into grams.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\ntTokg \n(Function)\n\n\nThis converts the input given in tonnes into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from tonnes into kilograms.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\nyTod \n(Function)\n\n\nThis converts the given input in years into days.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from years into days.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "1.0.17"
        }, 
        {
            "location": "/api/1.0.17/#api-docs-v1017", 
            "text": "", 
            "title": "API Docs - v1.0.17"
        }, 
        {
            "location": "/api/1.0.17/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.17/#mmtokm-function", 
            "text": "This converts the input given in megameters into kilometers.  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from megameters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#cmtoft-function", 
            "text": "This converts the input given in centimeters into feet.  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.17/#cmtoin-function", 
            "text": "This converts the input given in centimeters into inches.  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.17/#cmtokm-function", 
            "text": "This converts the input value given in centimeters into kilometers.  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#cmtom-function", 
            "text": "This converts the input given in centimeters into meters.  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.17/#cmtomi-function", 
            "text": "This converts the input given in centimeters into miles.  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.17/#cmtomm-function", 
            "text": "This converts the input given in centimeters into millimeters.  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#cmtonm-function", 
            "text": "This converts the input given in centimeters into nanometers.  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#cmtoum-function", 
            "text": "This converts the input in centimeters into micrometers.  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.17/#cmtoyd-function", 
            "text": "This converts the input given in centimeters into yards.  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.17/#dtoh-function", 
            "text": "This converts the input given in days into hours.  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from days into hours. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.17/#gtokg-function", 
            "text": "This converts the input given in grams into kilograms.  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into kilograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.17/#gtomg-function", 
            "text": "This converts the input given in grams into milligrams.  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into milligrams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.17/#gtoug-function", 
            "text": "This converts the input given in grams into micrograms.  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into micrograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.17/#htom-function", 
            "text": "This converts the input given in hours into minutes.  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into minutes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.17/#htos-function", 
            "text": "This converts the input given in hours into seconds.  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kgtolt-function", 
            "text": "This converts the input given in kilograms into imperial tons.  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kgtost-function", 
            "text": "This converts the input given in kilograms into US tons.  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into US tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kgtog-function", 
            "text": "This converts the input given in kilograms into grams.  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into grams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kgtolb-function", 
            "text": "This converts the input given in kilograms into pounds.  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into pounds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kgtooz-function", 
            "text": "This converts the input given in kilograms into ounces.  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into ounces. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kgtost-function_1", 
            "text": "This converts the input given in kilograms into imperial stones.  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial stones. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kgtot-function", 
            "text": "This converts the input given in kilograms into tonnes.  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into tonnes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kmtocm-function", 
            "text": "This converts the input given in kilometers into centimeters.  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kmtoft-function", 
            "text": "This converts the input given in kilometers into feet.  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kmtoin-function", 
            "text": "This converts the input given in kilometers into inches.  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kmtom-function", 
            "text": "This converts the input given in kilometers into meters.  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kmtomi-function", 
            "text": "This converts the input given in kilometers into miles.  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kmtomm-function", 
            "text": "This converts the input given in kilometers into millimeters.  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kmtonm-function", 
            "text": "This converts the input given in kilometers into nanometers.  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kmtoum-function", 
            "text": "This converts the input given in kilometers into micrometers.  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.17/#kmtoyd-function", 
            "text": "This converts the input given in kilometers into yards.  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.17/#ltom3-function", 
            "text": "This converts the input given in liters into cubic meters.  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into cubic meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.17/#ltoml-function", 
            "text": "This converts the input given in liters into milliliters.  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into milliliters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.17/#m3tol-function", 
            "text": "This converts the input given in cubic meters into liters.  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.17/#mtocm-function", 
            "text": "This converts the input given in meters into centimeters.  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#mtoft-function", 
            "text": "This converts the input given in meters into feet.  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.17/#mtomm-function", 
            "text": "This converts the input given in meters into millimeters.  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#mtos-function", 
            "text": "This converts the input given in minutes into seconds.  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from minutes into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.17/#mtoyd-function", 
            "text": "This converts the input given in meters into yards.  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.17/#mitokm-function", 
            "text": "This converts the input given in miles into kilometers.  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from miles into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.17/#mltol-function", 
            "text": "This converts the input given in milliliters into liters.  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from milliliters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.17/#stoms-function", 
            "text": "This converts the input given in seconds into milliseconds.  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into milliseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.17/#stons-function", 
            "text": "This converts the input given in seconds into nanoseconds.  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into nanoseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.17/#stous-function", 
            "text": "This converts the input given in seconds into microseconds.  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into microseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.17/#ttog-function", 
            "text": "This converts the input given in tonnes into grams.  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from Tonnes into grams. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.17/#ttokg-function", 
            "text": "This converts the input given in tonnes into kilograms.  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from tonnes into kilograms. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.17/#ytod-function", 
            "text": "This converts the given input in years into days.  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from years into days. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.16/", 
            "text": "API Docs - v1.0.16\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.16"
        }, 
        {
            "location": "/api/1.0.16/#api-docs-v1016", 
            "text": "", 
            "title": "API Docs - v1.0.16"
        }, 
        {
            "location": "/api/1.0.16/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.16/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.16/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.16/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.16/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.16/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.16/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.16/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.16/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.16/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.16/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.16/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.16/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.16/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.16/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.16/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.16/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.16/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.16/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.16/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.16/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.16/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.16/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.16/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.16/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.16/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.16/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.16/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.15/", 
            "text": "API Docs - v1.0.15\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.15"
        }, 
        {
            "location": "/api/1.0.15/#api-docs-v1015", 
            "text": "", 
            "title": "API Docs - v1.0.15"
        }, 
        {
            "location": "/api/1.0.15/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.15/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.15/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.15/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.15/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.15/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.15/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.15/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.15/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.15/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.15/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.15/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.15/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.15/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.15/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.15/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.15/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.15/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.15/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.15/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.15/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.15/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.15/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.15/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.15/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.15/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.15/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.15/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.14/", 
            "text": "API Docs - v1.0.14\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.14"
        }, 
        {
            "location": "/api/1.0.14/#api-docs-v1014", 
            "text": "", 
            "title": "API Docs - v1.0.14"
        }, 
        {
            "location": "/api/1.0.14/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.14/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.14/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.14/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.14/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.14/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.14/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.14/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.14/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.14/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.14/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.14/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.14/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.14/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.14/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.14/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.14/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.14/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.14/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.14/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.14/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.14/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.14/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.14/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.14/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.14/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.14/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.14/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.13/", 
            "text": "API Docs - v1.0.13\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.13"
        }, 
        {
            "location": "/api/1.0.13/#api-docs-v1013", 
            "text": "", 
            "title": "API Docs - v1.0.13"
        }, 
        {
            "location": "/api/1.0.13/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.13/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.13/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.13/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.13/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.13/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.13/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.13/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.13/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.13/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.13/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.13/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.13/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.13/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.13/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.13/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.13/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.13/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.13/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.13/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.13/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.13/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.13/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.13/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.13/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.13/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.13/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.13/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.12/", 
            "text": "API Docs - v1.0.12\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.12"
        }, 
        {
            "location": "/api/1.0.12/#api-docs-v1012", 
            "text": "", 
            "title": "API Docs - v1.0.12"
        }, 
        {
            "location": "/api/1.0.12/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.12/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.12/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.12/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.12/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.12/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.12/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.12/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.12/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.12/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.12/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.12/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.12/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.12/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.12/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.12/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.12/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.12/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.12/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.12/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.12/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.12/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.12/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.12/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.12/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.12/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.12/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.12/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.11/", 
            "text": "API Docs - v1.0.11\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.11"
        }, 
        {
            "location": "/api/1.0.11/#api-docs-v1011", 
            "text": "", 
            "title": "API Docs - v1.0.11"
        }, 
        {
            "location": "/api/1.0.11/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.11/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.11/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.11/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.11/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.11/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.11/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.11/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.11/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.11/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.11/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.11/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.11/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.11/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.11/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.11/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.11/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.11/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.11/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.11/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.11/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.11/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.11/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.11/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.11/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.11/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.11/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.11/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.10/", 
            "text": "API Docs - v1.0.10\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.10"
        }, 
        {
            "location": "/api/1.0.10/#api-docs-v1010", 
            "text": "", 
            "title": "API Docs - v1.0.10"
        }, 
        {
            "location": "/api/1.0.10/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.10/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.10/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.10/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.10/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.10/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.10/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.10/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.10/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.10/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.10/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.10/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.10/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.10/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.10/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.10/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.10/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.10/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.10/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.10/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.10/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.10/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.10/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.10/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.10/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.10/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.10/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.10/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.9/", 
            "text": "API Docs - v1.0.9\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.9"
        }, 
        {
            "location": "/api/1.0.9/#api-docs-v109", 
            "text": "", 
            "title": "API Docs - v1.0.9"
        }, 
        {
            "location": "/api/1.0.9/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.9/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.9/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.9/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.9/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.9/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.9/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.9/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.9/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.9/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.9/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.9/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.9/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.9/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.9/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.9/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.9/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.9/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.9/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.9/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.9/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.9/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.9/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.9/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.9/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.9/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.9/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.9/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.8/", 
            "text": "API Docs - v1.0.8\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.8"
        }, 
        {
            "location": "/api/1.0.8/#api-docs-v108", 
            "text": "", 
            "title": "API Docs - v1.0.8"
        }, 
        {
            "location": "/api/1.0.8/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.8/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.8/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.8/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.8/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.8/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.8/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.8/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.8/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.8/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.8/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.8/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.8/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.8/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.8/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.8/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.8/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.8/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.8/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.8/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.8/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.8/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.8/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.8/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.8/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.8/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.8/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.8/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.7/", 
            "text": "API Docs - v1.0.7\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "1.0.7"
        }, 
        {
            "location": "/api/1.0.7/#api-docs-v107", 
            "text": "", 
            "title": "API Docs - v1.0.7"
        }, 
        {
            "location": "/api/1.0.7/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.7/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.7/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.7/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.7/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.7/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.7/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.7/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.7/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.7/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.7/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.7/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.7/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.7/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.7/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.7/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.7/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.7/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.7/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.7/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.7/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.7/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.7/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.7/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.7/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.7/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.7/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.7/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.6/", 
            "text": "API Docs - v1.0.6\n\n\nUnitconversion\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "1.0.6"
        }, 
        {
            "location": "/api/1.0.6/#api-docs-v106", 
            "text": "", 
            "title": "API Docs - v1.0.6"
        }, 
        {
            "location": "/api/1.0.6/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.6/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.6/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.6/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/1.0.6/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.6/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.6/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.6/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.6/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.6/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.6/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.6/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.6/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.6/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.6/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.6/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.6/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.6/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.6/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.6/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.6/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.6/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.6/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.6/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.6/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.6/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.6/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.6/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.5/", 
            "text": "API Docs - v1.0.5\n\n\nUnitconversion\n\n\nlToml \n(Function)\n\n\nConverts the input liters into milliliters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into milliliters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream\n\n\n\nm3Tol \n(Function)\n\n\nConverts the input cubic meters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nmlTol \n(Function)\n\n\nConverts the input milliliters into liters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from milliliters into liters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream\n\n\n\nlTom3 \n(Function)\n\n\nConverts the input liters into cubic meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from liters into cubic meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream\n\n\n\nkmToft \n(Function)\n\n\nConverts the input kilometers into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmToum \n(Function)\n\n\nConverts the input centimeters into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\nmTomm \n(Function)\n\n\nConverts the input meters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nkmTomm \n(Function)\n\n\nConverts the input kilometers into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmToyd \n(Function)\n\n\nConverts the input meters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nkmTocm \n(Function)\n\n\nConverts the input kilometers into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\nmTocm \n(Function)\n\n\nConverts the input meters into centimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into centimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream\n\n\n\ncmToft \n(Function)\n\n\nConverts the input centimeters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters to feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\nkmTom \n(Function)\n\n\nConverts the input kilometers into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\nMmTokm \n(Function)\n\n\nConverts the input megameters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from megameters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nkmToyd \n(Function)\n\n\nConverts the input kilometers into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\ncmTonm \n(Function)\n\n\nConverts the input centimeters into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\nkmToin \n(Function)\n\n\nConverts the input kilometers into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTom \n(Function)\n\n\nConverts the input centimeters into meters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into meters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream\n\n\n\ncmToin \n(Function)\n\n\nConverts the input centimeters into inches\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into inches\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream\n\n\n\ncmTomi \n(Function)\n\n\nConverts the input centimeters into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmTomi \n(Function)\n\n\nConverts the input kilometers into miles\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into miles\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream\n\n\n\nkmToum \n(Function)\n\n\nConverts the input kilometers into micrometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into micrometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream\n\n\n\ncmToyd \n(Function)\n\n\nConverts the input centimeters into yards\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into yards\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream\n\n\n\nkmTonm \n(Function)\n\n\nConverts the input kilometers into nanometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilometers into nanometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream\n\n\n\ncmTokm \n(Function)\n\n\nConverts the input centimeters into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nmToft \n(Function)\n\n\nConverts the input meters into feet\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from meters into feet\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream\n\n\n\ncmTomm \n(Function)\n\n\nConverts the input centimeters into millimeters\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from centimeters into millimeters\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream\n\n\n\nmiTokm \n(Function)\n\n\nConverts the input miles into kilometers\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from miles into kilometers\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream\n\n\n\nhTom \n(Function)\n\n\nConverts the input hours into minutes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into minutes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream\n\n\n\ndToh \n(Function)\n\n\nConverts the input days into hours\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from days into hours\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream\n\n\n\nsTons \n(Function)\n\n\nConverts the input seconds into nanoseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into nanoseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream\n\n\n\nyTod \n(Function)\n\n\nConverts the input years into days\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from years into days\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream\n\n\n\nsTous \n(Function)\n\n\nConverts the input seconds into microseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into microseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream\n\n\n\nmTos \n(Function)\n\n\nConverts the input minutes into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from minutes into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nhTos \n(Function)\n\n\nConverts the input hours into seconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from hours into seconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream\n\n\n\nsToms \n(Function)\n\n\nConverts the input seconds into milliseconds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from seconds into milliseconds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream\n\n\n\ntTokg \n(Function)\n\n\nConverts the input Tonnes into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into kilograms\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nkgToST \n(Function)\n\n\nConverts the input kilograms into US tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into US tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream\n\n\n\nkgTooz \n(Function)\n\n\nConverts the input kilograms into ounces\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into ounces\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream\n\n\n\nkgTolb \n(Function)\n\n\nConverts the input kilograms into pounds\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into pounds\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream\n\n\n\ngTokg \n(Function)\n\n\nConverts the input grams into kilograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into kilograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream\n\n\n\nkgTost \n(Function)\n\n\nConverts the input kilograms into imperial stones\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial stones\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream\n\n\n\nkgTot \n(Function)\n\n\nConverts the input kilograms into Tonnes\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into Tonnes\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream\n\n\n\nkgToLT \n(Function)\n\n\nConverts the input kilograms into imperial tons\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into imperial tons\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream\n\n\n\ntTog \n(Function)\n\n\nConverts the input Tonnes into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from Tonnes into grams\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream\n\n\n\ngToug \n(Function)\n\n\nConverts the input grams into micrograms\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into micrograms\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream\n\n\n\ngTomg \n(Function)\n\n\nConverts the input grams into milligrams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from grams into milligrams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream\n\n\n\nkgTog \n(Function)\n\n\nConverts the input kilograms into grams\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value needed to be converted from kilograms into grams\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "1.0.5"
        }, 
        {
            "location": "/api/1.0.5/#api-docs-v105", 
            "text": "", 
            "title": "API Docs - v1.0.5"
        }, 
        {
            "location": "/api/1.0.5/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/1.0.5/#ltoml-function", 
            "text": "Converts the input liters into milliliters  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into milliliters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToMillilitreStream will be converted to milliliters and inserted in to the OutMediationStream", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/1.0.5/#m3tol-function", 
            "text": "Converts the input cubic meters into liters  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The cubic meter values from UnitConversionForCubicmetreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/1.0.5/#mltol-function", 
            "text": "Converts the input milliliters into liters  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from milliliters into liters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The milliliter values from UnitConversionForMillilitreToLitreStream will be converted to liters and inserted in to the OutMediationStream", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/1.0.5/#ltom3-function", 
            "text": "Converts the input liters into cubic meters  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from liters into cubic meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The liter values from UnitConversionForLitreToCubicmetreStream will be converted to cubic meters and inserted in to the OutMediationStream", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kmtoft-function", 
            "text": "Converts the input kilometers into feet  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/1.0.5/#cmtoum-function", 
            "text": "Converts the input centimeters into micrometers  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/1.0.5/#mtomm-function", 
            "text": "Converts the input meters into millimeters  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kmtomm-function", 
            "text": "Converts the input kilometers into millimeters  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#mtoyd-function", 
            "text": "Converts the input meters into yards  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kmtocm-function", 
            "text": "Converts the input kilometers into centimeters  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#mtocm-function", 
            "text": "Converts the input meters into centimeters  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into centimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToCentimetreStream will be converted to centimeters and inserted in to the OutMediationStream", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#cmtoft-function", 
            "text": "Converts the input centimeters into feet  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters to feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kmtom-function", 
            "text": "Converts the input kilometers into meters  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMetreStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/1.0.5/#mmtokm-function", 
            "text": "Converts the input megameters into kilometers  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from megameters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The megameters values from UnitConversionForMegametreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kmtoyd-function", 
            "text": "Converts the input kilometers into yards  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.5/#cmtonm-function", 
            "text": "Converts the input centimeters into nanometers  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kmtoin-function", 
            "text": "Converts the input kilometers into inches  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/1.0.5/#cmtom-function", 
            "text": "Converts the input centimeters into meters  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into meters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMeterStream will be converted to meters and inserted in to the OutMediationStream", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/1.0.5/#cmtoin-function", 
            "text": "Converts the input centimeters into inches  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into inches \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToInchStream will be converted to inches and inserted in to the OutMediationStream", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/1.0.5/#cmtomi-function", 
            "text": "Converts the input centimeters into miles  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kmtomi-function", 
            "text": "Converts the input kilometers into miles  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into miles \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMileStream will be converted to miles and inserted in to the OutMediationStream", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kmtoum-function", 
            "text": "Converts the input kilometers into micrometers  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into micrometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToMicrometreStream will be converted to micrometers and inserted in to the OutMediationStream", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/1.0.5/#cmtoyd-function", 
            "text": "Converts the input centimeters into yards  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into yards \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToYardStream will be converted to yards and inserted in to the OutMediationStream", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kmtonm-function", 
            "text": "Converts the input kilometers into nanometers  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilometers into nanometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilometer values from UnitConversionForKilometreToNanometreStream will be converted to nanometers and inserted in to the OutMediationStream", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#cmtokm-function", 
            "text": "Converts the input centimeters into kilometers  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#mtoft-function", 
            "text": "Converts the input meters into feet  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from meters into feet \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The meter values from UnitConversionForMetreToFootStream will be converted to feet and inserted in to the OutMediationStream", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/1.0.5/#cmtomm-function", 
            "text": "Converts the input centimeters into millimeters  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from centimeters into millimeters \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values from UnitConversionForCentimetreToMillimetreStream will be converted to millimeters and inserted in to the OutMediationStream", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#mitokm-function", 
            "text": "Converts the input miles into kilometers  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from miles into kilometers \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The mile values from UnitConversionForMileToKilometreStream will be converted to kilometers and inserted in to the OutMediationStream", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/1.0.5/#htom-function", 
            "text": "Converts the input hours into minutes  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into minutes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToMinuteStream will be converted to minutes and inserted in to the OutMediationStream", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/1.0.5/#dtoh-function", 
            "text": "Converts the input days into hours  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from days into hours \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The day values from UnitConversionForDayToHourStream will be converted to hours and inserted in to the OutMediationStream", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/1.0.5/#stons-function", 
            "text": "Converts the input seconds into nanoseconds  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into nanoseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToNanosecondStream will be converted to nanoseconds and inserted in to the OutMediationStream", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/1.0.5/#ytod-function", 
            "text": "Converts the input years into days  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from years into days \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The year values from UnitConversionForYearToDayStream will be converted to days and inserted in to the OutMediationStream", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/api/1.0.5/#stous-function", 
            "text": "Converts the input seconds into microseconds  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into microseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMicrosecondStream will be converted to microseconds and inserted in to the OutMediationStream", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/1.0.5/#mtos-function", 
            "text": "Converts the input minutes into seconds  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from minutes into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The minute values from UnitConversionForMinuteToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/1.0.5/#htos-function", 
            "text": "Converts the input hours into seconds  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from hours into seconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The hour values from UnitConversionForHourToSecondStream will be converted to seconds and inserted in to the OutMediationStream", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/1.0.5/#stoms-function", 
            "text": "Converts the input seconds into milliseconds  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from seconds into milliseconds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The second values from UnitConversionForSecondToMillisecondStream will be converted to milliseconds and inserted in to the OutMediationStream", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/1.0.5/#ttokg-function", 
            "text": "Converts the input Tonnes into kilograms  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into kilograms \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kgtost-function", 
            "text": "Converts the input kilograms into US tons  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into US tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToUSTonStream will be converted to US tons and inserted in to the OutMediationStream", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kgtooz-function", 
            "text": "Converts the input kilograms into ounces  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into ounces \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToOunceStream will be converted to ounces and inserted in to the OutMediationStream", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kgtolb-function", 
            "text": "Converts the input kilograms into pounds  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into pounds \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToPoundStream will be converted to pounds and inserted in to the OutMediationStream", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/1.0.5/#gtokg-function", 
            "text": "Converts the input grams into kilograms  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into kilograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToKilogramStream will be converted to kilograms and inserted in to the OutMediationStream", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kgtost-function_1", 
            "text": "Converts the input kilograms into imperial stones  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial stones \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToStonemStream will be converted to imperial stones and inserted in to the OutMediationStream", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kgtot-function", 
            "text": "Converts the input kilograms into Tonnes  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into Tonnes \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToTonneStream will be converted to Tonnes and inserted in to the OutMediationStream", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kgtolt-function", 
            "text": "Converts the input kilograms into imperial tons  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into imperial tons \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToImperialTonStream will be converted to imperial tons and inserted in to the OutMediationStream", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/1.0.5/#ttog-function", 
            "text": "Converts the input Tonnes into grams  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from Tonnes into grams \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The Tonne values from UnitConversionForTonneToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/1.0.5/#gtoug-function", 
            "text": "Converts the input grams into micrograms  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into micrograms \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMicrogramStream will be converted to micrograms and inserted in to the OutMediationStream", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/1.0.5/#gtomg-function", 
            "text": "Converts the input grams into milligrams  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from grams into milligrams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The gram values from UnitConversionForGramToMilligramStream will be converted to milligrams and inserted in to the OutMediationStream", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/1.0.5/#kgtog-function", 
            "text": "Converts the input kilograms into grams  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value needed to be converted from kilograms into grams \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The kilogram values from UnitConversionForKilogramToGramStream will be converted to grams and inserted in to the OutMediationStream", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/latest/", 
            "text": "API Docs - v2.0.0\n\n\nUnitconversion\n\n\nMmTokm \n(Function)\n\n\nThis converts the input given in megameters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:MmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from megameters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToft \n(Function)\n\n\nThis converts the input given in centimeters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToin \n(Function)\n\n\nThis converts the input given in centimeters into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTokm \n(Function)\n\n\nThis converts the input value given in centimeters into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTom \n(Function)\n\n\nThis converts the input given in centimeters into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomi \n(Function)\n\n\nThis converts the input given in centimeters into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTomm \n(Function)\n\n\nThis converts the input given in centimeters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\ncmTonm \n(Function)\n\n\nThis converts the input given in centimeters into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToum \n(Function)\n\n\nThis converts the input in centimeters into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.\n\n\n\ncmToyd \n(Function)\n\n\nThis converts the input given in centimeters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:cmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from centimeters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\ndToh \n(Function)\n\n\nThis converts the input given in days into hours.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:dToh(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from days into hours.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.\n\n\n\ngTokg \n(Function)\n\n\nThis converts the input given in grams into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTokg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into kilograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\ngTomg \n(Function)\n\n\nThis converts the input given in grams into milligrams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gTomg(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into milligrams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.\n\n\n\ngToug \n(Function)\n\n\nThis converts the input given in grams into micrograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:gToug(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from grams into micrograms.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.\n\n\n\nhTom \n(Function)\n\n\nThis converts the input given in hours into minutes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into minutes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.\n\n\n\nhTos \n(Function)\n\n\nThis converts the input given in hours into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:hTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from hours into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToLT \n(Function)\n\n\nThis converts the input given in kilograms into imperial tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToLT(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgToST \n(Function)\n\n\nThis converts the input given in kilograms into US tons.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgToST(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into US tons.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTog \n(Function)\n\n\nThis converts the input given in kilograms into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTog(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into grams.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTolb \n(Function)\n\n\nThis converts the input given in kilograms into pounds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTolb(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into pounds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTooz \n(Function)\n\n\nThis converts the input given in kilograms into ounces.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTooz(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into ounces.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTost \n(Function)\n\n\nThis converts the input given in kilograms into imperial stones.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTost(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into imperial stones.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.\n\n\n\nkgTot \n(Function)\n\n\nThis converts the input given in kilograms into tonnes.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kgTot(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilograms into tonnes.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTocm \n(Function)\n\n\nThis converts the input given in kilometers into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.\n\n\n\nkmToft \n(Function)\n\n\nThis converts the input given in kilometers into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToin \n(Function)\n\n\nThis converts the input given in kilometers into inches.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToin(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into inches.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTom \n(Function)\n\n\nThis converts the input given in kilometers into meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTom(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomi \n(Function)\n\n\nThis converts the input given in kilometers into miles.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomi(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into miles.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTomm \n(Function)\n\n\nThis converts the input given in kilometers into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nkmTonm \n(Function)\n\n\nThis converts the input given in kilometers into nanometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmTonm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into nanometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.\n\n\n\nkmToum \n(Function)\n\n\nThis converts the input given in kilometers into micrometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToum(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into micrometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.\n\n\n\nkmToyd \n(Function)\n\n\nThis converts the input given in kilometers into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:kmToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from kilometers into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nlTom3 \n(Function)\n\n\nThis converts the input given in liters into cubic meters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lTom3(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into cubic meters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.\n\n\n\nlToml \n(Function)\n\n\nThis converts the input given in liters into milliliters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:lToml(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from liters into milliliters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.\n\n\n\nm3Tol \n(Function)\n\n\nThis converts the input given in cubic meters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:m3Tol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTocm \n(Function)\n\n\nThis converts the input given in meters into centimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTocm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into centimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmToft \n(Function)\n\n\nThis converts the input given in meters into feet.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToft(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into feet.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.\n\n\n\nmTomm \n(Function)\n\n\nThis converts the input given in meters into millimeters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTomm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into millimeters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.\n\n\n\nmTos \n(Function)\n\n\nThis converts the input given in minutes into seconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mTos(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from minutes into seconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.\n\n\n\nmToyd \n(Function)\n\n\nThis converts the input given in meters into yards.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mToyd(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from meters into yards.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.\n\n\n\nmiTokm \n(Function)\n\n\nThis converts the input given in miles into kilometers.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:miTokm(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from miles into kilometers.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.\n\n\n\nmlTol \n(Function)\n\n\nThis converts the input given in milliliters into liters.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:mlTol(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from milliliters into liters.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.\n\n\n\nsToms \n(Function)\n\n\nThis converts the input given in seconds into milliseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sToms(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into milliseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTons \n(Function)\n\n\nThis converts the input given in seconds into nanoseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTons(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into nanoseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.\n\n\n\nsTous \n(Function)\n\n\nThis converts the input given in seconds into microseconds.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:sTous(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from seconds into microseconds.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.\n\n\n\ntTog \n(Function)\n\n\nThis converts the input given in tonnes into grams.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTog(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from Tonnes into grams.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.\n\n\n\ntTokg \n(Function)\n\n\nThis converts the input given in tonnes into kilograms.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:tTokg(\nINT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from tonnes into kilograms.\n\n        \n\n        \nINT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.\n\n\n\nyTod \n(Function)\n\n\nThis converts the given input in years into days.\n\n\n\nSyntax\n\n\nDOUBLE\n unitconversion:yTod(\nINT|LONG|FLOAT|DOUBLE\n p1)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \np1\n\n        \nThe value that needs to be converted from years into days.\n\n        \n\n        \nINT\nLONG\nFLOAT\nDOUBLE\n\n        \nNo\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;\n\n\n\n\n\nThe value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "latest"
        }, 
        {
            "location": "/api/latest/#api-docs-v200", 
            "text": "", 
            "title": "API Docs - v2.0.0"
        }, 
        {
            "location": "/api/latest/#unitconversion", 
            "text": "", 
            "title": "Unitconversion"
        }, 
        {
            "location": "/api/latest/#mmtokm-function", 
            "text": "This converts the input given in megameters into kilometers.  Syntax  DOUBLE  unitconversion:MmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from megameters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMegametreToKilometreStream (inValue int); \nfrom UnitConversionForMegametreToKilometreStream \nselect unitconversion:MmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in megameters from 'UnitConversionForMegametreToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "MmTokm (Function)"
        }, 
        {
            "location": "/api/latest/#cmtoft-function", 
            "text": "This converts the input given in centimeters into feet.  Syntax  DOUBLE  unitconversion:cmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToFootStream (inValue int); \nfrom UnitConversionForCentimetreToFootStream \nselect unitconversion:cmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The centimeter values received from 'UnitConversionForCentimetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToft (Function)"
        }, 
        {
            "location": "/api/latest/#cmtoin-function", 
            "text": "This converts the input given in centimeters into inches.  Syntax  DOUBLE  unitconversion:cmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToInchStream (inValue int); \nfrom UnitConversionForCentimetreToInchStream \nselect unitconversion:cmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToInchStream' input stream, is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToin (Function)"
        }, 
        {
            "location": "/api/latest/#cmtokm-function", 
            "text": "This converts the input value given in centimeters into kilometers.  Syntax  DOUBLE  unitconversion:cmTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToKilometreStream (inValue int); \nfrom UnitConversionForCentimetreToKilometreStream \nselect unitconversion:cmTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value obtained from 'UnitConversionForCentimetreToKilometreStream' input stream in centimeters, is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTokm (Function)"
        }, 
        {
            "location": "/api/latest/#cmtom-function", 
            "text": "This converts the input given in centimeters into meters.  Syntax  DOUBLE  unitconversion:cmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMeterStream (inValue int); \nfrom UnitConversionForCentimetreToMeterStream \nselect unitconversion:cmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMeterStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTom (Function)"
        }, 
        {
            "location": "/api/latest/#cmtomi-function", 
            "text": "This converts the input given in centimeters into miles.  Syntax  DOUBLE  unitconversion:cmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMileStream (inValue int); \nfrom UnitConversionForCentimetreToMileStream \nselect unitconversion:cmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomi (Function)"
        }, 
        {
            "location": "/api/latest/#cmtomm-function", 
            "text": "This converts the input given in centimeters into millimeters.  Syntax  DOUBLE  unitconversion:cmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMillimetreStream (inValue int); \nfrom UnitConversionForCentimetreToMillimetreStream \nselect unitconversion:cmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeters obtained from 'UnitConversionForCentimetreToMillimetreStream' input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTomm (Function)"
        }, 
        {
            "location": "/api/latest/#cmtonm-function", 
            "text": "This converts the input given in centimeters into nanometers.  Syntax  DOUBLE  unitconversion:cmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToNanometreStream (inValue int); \nfrom UnitConversionForCentimetreToNanometreStream \nselect unitconversion:cmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToNanometreStream' input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmTonm (Function)"
        }, 
        {
            "location": "/api/latest/#cmtoum-function", 
            "text": "This converts the input in centimeters into micrometers.  Syntax  DOUBLE  unitconversion:cmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToMicrometreStream (inValue int); \nfrom UnitConversionForCentimetreToMicrometreStream \nselect unitconversion:cmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in centimeter obtained from 'UnitConversionForCentimetreToMicrometreStream' input stream is converted into micrometers and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToum (Function)"
        }, 
        {
            "location": "/api/latest/#cmtoyd-function", 
            "text": "This converts the input given in centimeters into yards.  Syntax  DOUBLE  unitconversion:cmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from centimeters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCentimetreToYardStream (inValue int); \nfrom UnitConversionForCentimetreToYardStream \nselect unitconversion:cmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in centimeters obtained from 'UnitConversionForCentimetreToYardStream' is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "cmToyd (Function)"
        }, 
        {
            "location": "/api/latest/#dtoh-function", 
            "text": "This converts the input given in days into hours.  Syntax  DOUBLE  unitconversion:dToh( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from days into hours. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForDayToHourStream (inValue int); \nfrom UnitConversionForDayToHourStream \nselect unitconversion:dToh(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in days from 'UnitConversionForDayToHourStream' is converted into hours and returned to the 'OutMediationStream'.", 
            "title": "dToh (Function)"
        }, 
        {
            "location": "/api/latest/#gtokg-function", 
            "text": "This converts the input given in grams into kilograms.  Syntax  DOUBLE  unitconversion:gTokg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into kilograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToKilogramStream (inValue int); \nfrom UnitConversionForGramToKilogramStream \nselect unitconversion:gTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gTokg (Function)"
        }, 
        {
            "location": "/api/latest/#gtomg-function", 
            "text": "This converts the input given in grams into milligrams.  Syntax  DOUBLE  unitconversion:gTomg( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into milligrams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMilligramStream (inValue int); \nfrom UnitConversionForGramToMilligramStream \nselect unitconversion:gTomg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMilligramStream' input stream is converted into milligrams and returned to the 'OutMediationStream' output stream.", 
            "title": "gTomg (Function)"
        }, 
        {
            "location": "/api/latest/#gtoug-function", 
            "text": "This converts the input given in grams into micrograms.  Syntax  DOUBLE  unitconversion:gToug( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from grams into micrograms. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForGramToMicrogramStream (inValue int); \nfrom UnitConversionForGramToMicrogramStream \nselect unitconversion:gToug(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in grams from 'UnitConversionForGramToMicrogramStream' input stream is converted into micrograms and returned to the 'OutMediationStream' output stream.", 
            "title": "gToug (Function)"
        }, 
        {
            "location": "/api/latest/#htom-function", 
            "text": "This converts the input given in hours into minutes.  Syntax  DOUBLE  unitconversion:hTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into minutes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToMinuteStream (inValue int); \nfrom UnitConversionForHourToMinuteStream \nselect unitconversion:hTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToMinuteStream' input stream isconverted into minutes and returned to the 'OutMediationStream' output stream.", 
            "title": "hTom (Function)"
        }, 
        {
            "location": "/api/latest/#htos-function", 
            "text": "This converts the input given in hours into seconds.  Syntax  DOUBLE  unitconversion:hTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from hours into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForHourToSecondStream (inValue int); \nfrom UnitConversionForHourToSecondStream \nselect unitconversion:hTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in hours from 'UnitConversionForHourToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "hTos (Function)"
        }, 
        {
            "location": "/api/latest/#kgtolt-function", 
            "text": "This converts the input given in kilograms into imperial tons.  Syntax  DOUBLE  unitconversion:kgToLT( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToImperialTonStream (inValue int); \nfrom UnitConversionForKilogramToImperialTonStream \nselect unitconversion:kgToLT(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToImperialTonStream' input stream is converted into imperial tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToLT (Function)"
        }, 
        {
            "location": "/api/latest/#kgtost-function", 
            "text": "This converts the input given in kilograms into US tons.  Syntax  DOUBLE  unitconversion:kgToST( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into US tons. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToUSTonStream (inValue int); \nfrom UnitConversionForKilogramToUSTonStream \nselect unitconversion:kgToST(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToUSTonStream' input stream is converted into US tons and returned to the 'OutMediationStream' output stream.", 
            "title": "kgToST (Function)"
        }, 
        {
            "location": "/api/latest/#kgtog-function", 
            "text": "This converts the input given in kilograms into grams.  Syntax  DOUBLE  unitconversion:kgTog( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into grams. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToGramStream (inValue int); \nfrom UnitConversionForKilogramToGramStream \nselect unitconversion:kgTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTog (Function)"
        }, 
        {
            "location": "/api/latest/#kgtolb-function", 
            "text": "This converts the input given in kilograms into pounds.  Syntax  DOUBLE  unitconversion:kgTolb( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into pounds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToPoundStream (inValue int); \nfrom UnitConversionForKilogramToPoundStream \nselect unitconversion:kgTolb(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToPoundStream' input stream is converted into pounds and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTolb (Function)"
        }, 
        {
            "location": "/api/latest/#kgtooz-function", 
            "text": "This converts the input given in kilograms into ounces.  Syntax  DOUBLE  unitconversion:kgTooz( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into ounces. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToOunceStream (inValue int); \nfrom UnitConversionForKilogramToOunceStream \nselect unitconversion:kgTooz(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToOunceStream' input stream is converted into ounces and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTooz (Function)"
        }, 
        {
            "location": "/api/latest/#kgtost-function_1", 
            "text": "This converts the input given in kilograms into imperial stones.  Syntax  DOUBLE  unitconversion:kgTost( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into imperial stones. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToStonemStream (inValue int); \nfrom UnitConversionForKilogramToStonemStream \nselect unitconversion:kgTost(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToStonemStream' input stream is converted into imperial stones and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTost (Function)"
        }, 
        {
            "location": "/api/latest/#kgtot-function", 
            "text": "This converts the input given in kilograms into tonnes.  Syntax  DOUBLE  unitconversion:kgTot( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilograms into tonnes. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilogramToTonneStream (inValue int); \nfrom UnitConversionForKilogramToTonneStream \nselect unitconversion:kgTot(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilograms from 'UnitConversionForKilogramToTonneStream' input stream is converted into tonnes and returned to the 'OutMediationStream' output stream.", 
            "title": "kgTot (Function)"
        }, 
        {
            "location": "/api/latest/#kmtocm-function", 
            "text": "This converts the input given in kilometers into centimeters.  Syntax  DOUBLE  unitconversion:kmTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToCentimetreStream (inValue int); \nfrom UnitConversionForKilometreToCentimetreStream \nselect unitconversion:kmTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The values in kilometers obtained from 'UnitConversionForKilometreToCentimetreStream'input stream is converted into centimeters and returned to the 'OutMediationStream' outputstream.", 
            "title": "kmTocm (Function)"
        }, 
        {
            "location": "/api/latest/#kmtoft-function", 
            "text": "This converts the input given in kilometers into feet.  Syntax  DOUBLE  unitconversion:kmToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToFootStream (inValue int); \nfrom UnitConversionForKilometreToFootStream \nselect unitconversion:kmToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToft (Function)"
        }, 
        {
            "location": "/api/latest/#kmtoin-function", 
            "text": "This converts the input given in kilometers into inches.  Syntax  DOUBLE  unitconversion:kmToin( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into inches. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToInchStream (inValue int); \nfrom UnitConversionForKilometreToInchStream \nselect unitconversion:kmToin(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToInchStream' input stream is converted into inches and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToin (Function)"
        }, 
        {
            "location": "/api/latest/#kmtom-function", 
            "text": "This converts the input given in kilometers into meters.  Syntax  DOUBLE  unitconversion:kmTom( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMetreStream (inValue int); \nfrom UnitConversionForKilometreToMetreStream \nselect unitconversion:kmTom(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMetreStream'input stream is converted into meters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTom (Function)"
        }, 
        {
            "location": "/api/latest/#kmtomi-function", 
            "text": "This converts the input given in kilometers into miles.  Syntax  DOUBLE  unitconversion:kmTomi( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into miles. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMileStream (inValue int); \nfrom UnitConversionForKilometreToMileStream \nselect unitconversion:kmTomi(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMileStream' input stream is converted into miles and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomi (Function)"
        }, 
        {
            "location": "/api/latest/#kmtomm-function", 
            "text": "This converts the input given in kilometers into millimeters.  Syntax  DOUBLE  unitconversion:kmTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMillimetreStream (inValue int); \nfrom UnitConversionForKilometreToMillimetreStream \nselect unitconversion:kmTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMillimetreStream'input stream is converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTomm (Function)"
        }, 
        {
            "location": "/api/latest/#kmtonm-function", 
            "text": "This converts the input given in kilometers into nanometers.  Syntax  DOUBLE  unitconversion:kmTonm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into nanometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToNanometreStream (inValue int); \nfrom UnitConversionForKilometreToNanometreStream \nselect unitconversion:kmTonm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToNanometreStream'input stream is converted into nanometers and returned to the 'OutMediationStream' output stream.", 
            "title": "kmTonm (Function)"
        }, 
        {
            "location": "/api/latest/#kmtoum-function", 
            "text": "This converts the input given in kilometers into micrometers.  Syntax  DOUBLE  unitconversion:kmToum( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into micrometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToMicrometreStream (inValue int); \nfrom UnitConversionForKilometreToMicrometreStream \nselect unitconversion:kmToum(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers obtained from 'UnitConversionForKilometreToMicrometreStream'input stream is converted into micrometers and returned to the 'OutMediationStream'output stream.", 
            "title": "kmToum (Function)"
        }, 
        {
            "location": "/api/latest/#kmtoyd-function", 
            "text": "This converts the input given in kilometers into yards.  Syntax  DOUBLE  unitconversion:kmToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from kilometers into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForKilometreToYardStream (inValue int); \nfrom UnitConversionForKilometreToYardStream \nselect unitconversion:kmToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in kilometers from 'UnitConversionForKilometreToYardStream' input streamis converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "kmToyd (Function)"
        }, 
        {
            "location": "/api/latest/#ltom3-function", 
            "text": "This converts the input given in liters into cubic meters.  Syntax  DOUBLE  unitconversion:lTom3( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into cubic meters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToCubicmetreStream (inValue int); \nfrom UnitConversionForLitreToCubicmetreStream \nselect unitconversion:lTom3(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToCubicmetreStream' input stream is converted into cubic meters and returned to the 'OutMediationStream' output stream.", 
            "title": "lTom3 (Function)"
        }, 
        {
            "location": "/api/latest/#ltoml-function", 
            "text": "This converts the input given in liters into milliliters.  Syntax  DOUBLE  unitconversion:lToml( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from liters into milliliters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForLitreToMillilitreStream (inValue int); \nfrom UnitConversionForLitreToMillilitreStream \nselect unitconversion:lToml(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in liters from 'UnitConversionForLitreToMillilitreStream' input stream is converted into milliliters and returned to the 'OutMediationStream' output stream.", 
            "title": "lToml (Function)"
        }, 
        {
            "location": "/api/latest/#m3tol-function", 
            "text": "This converts the input given in cubic meters into liters.  Syntax  DOUBLE  unitconversion:m3Tol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForCubicmetreToLitreStream (inValue int); \nfrom UnitConversionForCubicmetreToLitreStream \nselect unitconversion:m3Tol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in cubic meters from 'UnitConversionForCubicmetreToLitreStream' input streamis converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "m3Tol (Function)"
        }, 
        {
            "location": "/api/latest/#mtocm-function", 
            "text": "This converts the input given in meters into centimeters.  Syntax  DOUBLE  unitconversion:mTocm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into centimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToCentimetreStream (inValue int); \nfrom UnitConversionForMetreToCentimetreStream \nselect unitconversion:mTocm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToCentimetreStream' input stream is converted to centimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTocm (Function)"
        }, 
        {
            "location": "/api/latest/#mtoft-function", 
            "text": "This converts the input given in meters into feet.  Syntax  DOUBLE  unitconversion:mToft( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into feet. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToFootStream (inValue int); \nfrom UnitConversionForMetreToFootStream \nselect unitconversion:mToft(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToFootStream' input stream is converted into feet and returned to the 'OutMediationStream' output stream.", 
            "title": "mToft (Function)"
        }, 
        {
            "location": "/api/latest/#mtomm-function", 
            "text": "This converts the input given in meters into millimeters.  Syntax  DOUBLE  unitconversion:mTomm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into millimeters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToMillimetreStream (inValue int); \nfrom UnitConversionForMetreToMillimetreStream \nselect unitconversion:mTomm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToMillimetreStream' input streamis converted into millimeters and returned to the 'OutMediationStream' output stream.", 
            "title": "mTomm (Function)"
        }, 
        {
            "location": "/api/latest/#mtos-function", 
            "text": "This converts the input given in minutes into seconds.  Syntax  DOUBLE  unitconversion:mTos( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from minutes into seconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMinuteToSecondStream (inValue int); \nfrom UnitConversionForMinuteToSecondStream \nselect unitconversion:mTos(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in minutes from 'UnitConversionForMinuteToSecondStream' input stream is converted into seconds and returned to the 'OutMediationStream' output stream.", 
            "title": "mTos (Function)"
        }, 
        {
            "location": "/api/latest/#mtoyd-function", 
            "text": "This converts the input given in meters into yards.  Syntax  DOUBLE  unitconversion:mToyd( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from meters into yards. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMetreToYardStream (inValue int); \nfrom UnitConversionForMetreToYardStream \nselect unitconversion:mToyd(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in meters from 'UnitConversionForMetreToYardStream' input stream is converted into yards and returned to the 'OutMediationStream' output stream.", 
            "title": "mToyd (Function)"
        }, 
        {
            "location": "/api/latest/#mitokm-function", 
            "text": "This converts the input given in miles into kilometers.  Syntax  DOUBLE  unitconversion:miTokm( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from miles into kilometers. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMileToKilometreStream (inValue int); \nfrom UnitConversionForMileToKilometreStream \nselect unitconversion:miTokm(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in miles from 'UnitConversionForMileToKilometreStream' input stream is converted into kilometers and returned to the 'OutMediationStream' output stream.", 
            "title": "miTokm (Function)"
        }, 
        {
            "location": "/api/latest/#mltol-function", 
            "text": "This converts the input given in milliliters into liters.  Syntax  DOUBLE  unitconversion:mlTol( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from milliliters into liters. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForMillilitreToLitreStream (inValue int); \nfrom UnitConversionForMillilitreToLitreStream \nselect unitconversion:mlTol(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in milliliters from 'UnitConversionForMillilitreToLitreStream' input stream is converted into liters and returned to the 'OutMediationStream' output stream.", 
            "title": "mlTol (Function)"
        }, 
        {
            "location": "/api/latest/#stoms-function", 
            "text": "This converts the input given in seconds into milliseconds.  Syntax  DOUBLE  unitconversion:sToms( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into milliseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMillisecondStream (inValue int); \nfrom UnitConversionForSecondToMillisecondStream \nselect unitconversion:sToms(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMillisecondStream' input stream is converted into milliseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sToms (Function)"
        }, 
        {
            "location": "/api/latest/#stons-function", 
            "text": "This converts the input given in seconds into nanoseconds.  Syntax  DOUBLE  unitconversion:sTons( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into nanoseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToNanosecondStream (inValue int); \nfrom UnitConversionForSecondToNanosecondStream \nselect unitconversion:sTons(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToNanosecondStream' input stream is converted into nanoseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTons (Function)"
        }, 
        {
            "location": "/api/latest/#stous-function", 
            "text": "This converts the input given in seconds into microseconds.  Syntax  DOUBLE  unitconversion:sTous( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from seconds into microseconds. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForSecondToMicrosecondStream (inValue int); \nfrom UnitConversionForSecondToMicrosecondStream \nselect unitconversion:sTous(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in seconds from 'UnitConversionForSecondToMicrosecondStream' input stream is converted into microseconds and returned to the 'OutMediationStream' output stream.", 
            "title": "sTous (Function)"
        }, 
        {
            "location": "/api/latest/#ttog-function", 
            "text": "This converts the input given in tonnes into grams.  Syntax  DOUBLE  unitconversion:tTog( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from Tonnes into grams. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToGramStream (inValue int); \nfrom UnitConversionForTonneToGramStream \nselect unitconversion:tTog(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToGramStream' input stream is converted into grams and returned to the 'OutMediationStream' output stream.", 
            "title": "tTog (Function)"
        }, 
        {
            "location": "/api/latest/#ttokg-function", 
            "text": "This converts the input given in tonnes into kilograms.  Syntax  DOUBLE  unitconversion:tTokg( INT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from tonnes into kilograms. \n         \n         INT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForTonneToKilogramStream (inValue int); \nfrom UnitConversionForTonneToKilogramStream \nselect unitconversion:tTokg(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in tonnes from 'UnitConversionForTonneToKilogramStream' input stream is converted into kilograms and returned to the 'OutMediationStream' output stream.", 
            "title": "tTokg (Function)"
        }, 
        {
            "location": "/api/latest/#ytod-function", 
            "text": "This converts the given input in years into days.  Syntax  DOUBLE  unitconversion:yTod( INT|LONG|FLOAT|DOUBLE  p1)  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         p1 \n         The value that needs to be converted from years into days. \n         \n         INT LONG FLOAT DOUBLE \n         No \n         No \n       Examples  EXAMPLE 1  define stream UnitConversionForYearToDayStream (inValue int); \nfrom UnitConversionForYearToDayStream \nselect unitconversion:yTod(inValue) as UnitConversionValue \ninsert into OutMediationStream;  The value in years from 'UnitConversionForYearToDayStream' input stream is converted into days and returned to the 'OutMediationStream' output stream.", 
            "title": "yTod (Function)"
        }, 
        {
            "location": "/license/", 
            "text": "Copyright (c) 2017 WSO2 Inc. (\nhttp://www.wso2.org\n) All Rights Reserved.\n\n\nWSO2 Inc. licenses this file to you under the Apache License,\nVersion 2.0 (the \"License\"); you may not use this file except\nin compliance with the License.\nYou may obtain a copy of the License at\n\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n\n\n-------------------------------------------------------------------------\n                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \nLicense\n shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \nLicensor\n shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \nLegal Entity\n shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \ncontrol\n means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \nYou\n (or \nYour\n) shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \nSource\n form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \nObject\n form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \nWork\n shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \nDerivative Works\n shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \nContribution\n shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \nsubmitted\n\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \nNot a Contribution.\n\n\n   \nContributor\n shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \nNOTICE\n text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \nAS IS\n BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS", 
            "title": "License"
        }
    ]
}